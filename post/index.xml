<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on My New Hugo Site</title><link>https://nilzyj.github.io/post/</link><description>Recent content in Posts on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Jun 2021 17:29:10 +0000</lastBuildDate><atom:link href="https://nilzyj.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>微服务架构</title><link>https://nilzyj.github.io/post/framework/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</link><pubDate>Mon, 21 Jun 2021 17:29:10 +0000</pubDate><guid>https://nilzyj.github.io/post/framework/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</guid><description>支撑服务：负载均衡、网关、服务发现、集中配置、容错限流、认证授权、日志聚合、监控告警、灰度发布
平台服务PaaS：发布系统、集群资源调度、镜像治理、资源治理
基础设施LaaS：计算、网格、存储、NOC监控、安全
微服务可分为五个监控点：日志监控、Metrics 监控、健康检查、调用链检查、告警系统
调用链监控：Zipkin（Twitter团队）、Pinpoint（韩国）、SkyWalking（国内）、CAT（大众点评）、
配置中心 百度配置中心Disconf spring cloud config Apollo Nacos apollo的配置中心规模比较大，本地应用会有响应的配置中心客户端，可以定时同步配置中心里的配置。如果配置中心怠机，会使用缓存来进行配置。 通讯方式 RPC REST 耦合性 强耦合 松散耦合 消息协议 TCP HTTP 通讯协议 二进制 文本XML，json 性能 高 低于RPC 接口契约IDL thrift, protobuf, IdL Swagger 客户端 强类型客户端，一般自动生成 一般HTTP可访问，生成强类型客户端，多语言支持好 案例 Dubbo, Dubbox, motan, tars, grpc, thrift spring boot, tax-rs, dropwizard 开发者友好 客户端比较全面，二进制消息不能读 可读消息 对外开放 一般需要转成REST/文本协议 可直接对外开放 监控预警 监控内容 端用户体验监控 性能、返回码、城市、地区、运营商、版本、系统等 业务监控 核心指标监控、登录注册、下单、支付等 应用层监控 url、service、sql、cache可用率、响应时间、qps等 系统层监控（物理机、虚拟机、OS） cpu、内存、网络、硬盘等 基础设施监控（网络、交换机） 网络流量、丢包、错包、连接数等 监控架构</description></item><item><title>docker 命令</title><link>https://nilzyj.github.io/post/docker/docker%E5%91%BD%E4%BB%A4/</link><pubDate>Sat, 19 Jun 2021 14:10:10 +0000</pubDate><guid>https://nilzyj.github.io/post/docker/docker%E5%91%BD%E4%BB%A4/</guid><description>一、docker 基础命令 # 更新容器自动重启 docker update --restart=always 容器名称 # 进入容器 docker exec -it 容器名称 /bin/bash # 获取容器ip docker inspect --format=&amp;#39;{{.NetworkSettings.IPAddress}}&amp;#39; 容器名称 二、docker 启动容器 # 启动InfluxDB docker run --name influxdb -p 8086:8086 influxdb:2.0.7</description></item><item><title>jar包运行内存限制</title><link>https://nilzyj.github.io/post/java/%E8%BF%90%E8%A1%8Cjar%E5%8C%85%E5%86%85%E5%AD%98%E9%99%90%E5%88%B6/</link><pubDate>Sat, 19 Jun 2021 14:10:10 +0000</pubDate><guid>https://nilzyj.github.io/post/java/%E8%BF%90%E8%A1%8Cjar%E5%8C%85%E5%86%85%E5%AD%98%E9%99%90%E5%88%B6/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>nohup java &lt;span style="color:#f92672">-&lt;/span>Xms1024m &lt;span style="color:#f92672">-&lt;/span>Xmx1024m &lt;span style="color:#f92672">-&lt;/span>XX&lt;span style="color:#f92672">:&lt;/span>PermSize&lt;span style="color:#f92672">=&lt;/span>256m &lt;span style="color:#f92672">-&lt;/span>XX&lt;span style="color:#f92672">:&lt;/span>MaxPermSize&lt;span style="color:#f92672">=&lt;/span>512m &lt;span style="color:#f92672">-&lt;/span>XX&lt;span style="color:#f92672">:&lt;/span>MaxNewSize&lt;span style="color:#f92672">=&lt;/span>512m &lt;span style="color:#f92672">-&lt;/span>jar WebServer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">jar&lt;/span> &lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#f92672">/&lt;/span>data&lt;span style="color:#f92672">/&lt;/span>logs&lt;span style="color:#f92672">/&lt;/span>WebServer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">log&lt;/span> 2&lt;span style="color:#f92672">&amp;gt;&amp;amp;&lt;/span>1 &lt;span style="color:#f92672">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>说明：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>-Xms1024m 配置初始堆内存1024m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-Xmx1024m 配置最大堆内存1024m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-XX:PermSize&lt;span style="color:#f92672">=&lt;/span>256m Perm（俗称方法区）占整个堆内存的值；
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-XX:MaxPermSize&lt;span style="color:#f92672">=&lt;/span>512m 方法区占整个堆内存的最大值
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-XX:MaxNewSize&lt;span style="color:#f92672">=&lt;/span>512m 新生代内存上限值
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>vim 使用等级</title><link>https://nilzyj.github.io/post/vim/vim%E4%BD%BF%E7%94%A8%E7%AD%89%E7%BA%A7/</link><pubDate>Thu, 17 Jun 2021 11:48:10 +0000</pubDate><guid>https://nilzyj.github.io/post/vim/vim%E4%BD%BF%E7%94%A8%E7%AD%89%E7%BA%A7/</guid><description>&lt;h2 id="零">零&lt;/h2>
&lt;p>学会盲打&lt;/p>
&lt;h2 id="壹">壹&lt;/h2>
&lt;p>配置文件先从最简开始，在 伍级 前别考虑配置插件，千万别硬背命令，千万别直接取用别人的配置文件，基本还是长时间待在 insert mode 下，会觉得 vim 也不过尔尔，也不好用。这个时候，编辑效率可能比用原来的一般编辑器还低，别人问使用什麼编辑器时，多半会回答：vim 再配一个 nano, kate, kwrite, gedit, geany 或其他 IDE 之类的&lt;/p>
&lt;h2 id="贰">贰&lt;/h2>
&lt;p>养成习惯待在 normal mode（normal 不是白叫的），只有输入时才进入 insert mode，输入完马上 。
学习 normal mode 下的移动命令，这个时候输入文字标准流程：
normal mode 移动命令准确定位光标（记住，搜索命令也是移动命令）
进入 insert mode 编辑（进入 insert mode 别只用 i，要习惯视乎情况，使用 I a A o O s C）&lt;/p>
&lt;p>返回 normal mode
这个时候，编辑效应会恢复到和你之前用的普通编辑器一样，甚至有少量提高。&lt;/p>
&lt;h2 id="叄">叄&lt;/h2>
&lt;p>学习什麼是 operator（命令 d y c 等），什麼是 motion（所有能移动光标的命令，h j k l w e f t / ? 等等），学习 operator + motion 的方式，如 ct. （将当前光标到 . (点) 之间的内容删除并进入 insert mode 准备修改）。学习基础的 Ex 命令，:s 什麼的，这个时候，编辑效率开始明显提高，在用其他一般编辑器时，会开始觉得不习惯和低效率。&lt;/p>
&lt;h2 id="肆">肆&lt;/h2>
&lt;p>学习 text-objects，知道 operator + text-objects 的方法，可进行手术般精准的定位和修改，既然你主要用在 c/c++，举一些在这个情况下有用的例子：
ci” （由 change operator 和 text-object i” 组成），这个命令会找到当前光标所在行的下一个 “ 括起来的字符串，清除引号裏面的内容，并进入 insert mode 以方便修改。用起来比解释起来简单，你可用 const char* hello = “Hello world.”; 类似这样的代码来测试。
yaB （由 yank operator 和 text-object aB 组成），这个命令会将当前光标所在的代码块（{} 括起来的内容，包括花括号本身）复制到默认 register，方便在其他地方用 p 贴出来（当然，写代码不鼓励 copy and paste），你可用用任何一个 {} 来测试，然后找另外一个地方 p。
gUiw （由 make uppercase operator 和 text-object iw 组成），这个命令会将当前光标所在的 word 全部变成大写，如将 max_size 变成 MAX_SIZE，这个时候，开始知道为什麼 vim 精确高效，而且并不是因为全键盘无需鼠标。&lt;/p>
&lt;h2 id="伍">伍&lt;/h2>
&lt;p>习惯 operator + motion 后，发现 . 命令很好用，多注意使用可重复的命令组合，练习使用书签定位，q 记录宏，使用多个 register，使用 args，使用 buffer
使用其他的 Ex 命令，这个时候，想不起没用 vim 之前的日子是怎麼过来的&lt;/p>
&lt;h2 id="陆">陆&lt;/h2>
&lt;p>开始 map 经常反覆使用的命令，开始写 vimscript，开始知道自己需要什麼样的插件
试推荐几个：
pathogen 或 vundle，tagbar, CtrlP, Gundo, UltiSnips，surround，Syntastic，Conque，ack.vim，vim-commentary，fugitive（如果是 git 用户）
还有不少，但多对 c/c++ 没直接帮助，就不提了，这个时候，对其他编辑器提不起兴趣，或许 emacs 除外&lt;/p>
&lt;h2 id="柒">柒&lt;/h2>
&lt;p>拥有完全个人化的 vimrc，基本进入化境，成为江湖上的传说，常有旁人观察你编辑后，激起雄心壮志想要学vim，尝试几个小时候因为觉得热键太不”人性化”而放弃，但偶尔会向人提起他见过江湖上有你这麼一号人物。
以上来自：http://tieba.baidu.com/p/2057342114?fr=ala0&amp;amp;alath=2&amp;amp;pstbala=1&lt;/p>
&lt;hr></description></item><item><title>vim 快捷键列表</title><link>https://nilzyj.github.io/post/vim/vim%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%88%97%E8%A1%A8/</link><pubDate>Sat, 23 Mar 2019 11:41:10 +0000</pubDate><guid>https://nilzyj.github.io/post/vim/vim%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%88%97%E8%A1%A8/</guid><description>&lt;h3 id="1插入命令">1、插入命令&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">按键&lt;/th>
&lt;th style="text-align:left">操作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">i&lt;/td>
&lt;td style="text-align:left">当前光标前插入&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">I&lt;/td>
&lt;td style="text-align:left">到行首插入&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">a&lt;/td>
&lt;td style="text-align:left">当前光标后插入&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">A&lt;/td>
&lt;td style="text-align:left">到行末插入&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">o&lt;/td>
&lt;td style="text-align:left">光标下方打开新的一行并进入插入模式。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">O&lt;/td>
&lt;td style="text-align:left">可以在光标上方打开新的一行。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">cw&lt;/td>
&lt;td style="text-align:left">替换从光标所在位置后到一个单词结尾的字符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">C&lt;/td>
&lt;td style="text-align:left">替换从光标所在位置后到行末尾的字符&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="2移动光标">2、移动光标&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">按键&lt;/th>
&lt;th style="text-align:left">操作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">0&lt;/td>
&lt;td style="text-align:left">移动光标到行首&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">$&lt;/td>
&lt;td style="text-align:left">移动光标到行尾&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">^&lt;/td>
&lt;td style="text-align:left">到本行第一个不是blank字符的位置（所谓blank字符就是空格，tab，换行，回车等）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">g_&lt;/td>
&lt;td style="text-align:left">到本行最后一个不是blank字符的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">NG&lt;/td>
&lt;td style="text-align:left">到第N行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">gg&lt;/td>
&lt;td style="text-align:left">到第一行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">G&lt;/td>
&lt;td style="text-align:left">到最后一行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">w&lt;/td>
&lt;td style="text-align:left">到下一个单词开头&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">W&lt;/td>
&lt;td style="text-align:left">(由blank字符分隔)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">e&lt;/td>
&lt;td style="text-align:left">到下一个单词结尾&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">E&lt;/td>
&lt;td style="text-align:left">(由blank字符分隔)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">fa&lt;/td>
&lt;td style="text-align:left">到下一个为a的字符处，a可以为其他字符，F为反方向&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">3fa&lt;/td>
&lt;td style="text-align:left">到第三个为a的字符处，3可以为其他数字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">ta&lt;/td>
&lt;td style="text-align:left">到a前的字符处，a可以为其他字符，T为反方向&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">%&lt;/td>
&lt;td style="text-align:left">如果光标当前位置是括号(、)、[、]、{、}，按 % 会将光标移动到配对的括号上。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">*和#&lt;/td>
&lt;td style="text-align:left">匹配光标当前所在的单词，*移动到下一个匹配单词，#移动到上一次匹配单词&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">/或者?&lt;/td>
&lt;td style="text-align:left">搜索字符串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">输入 /&lt;/td>
&lt;td style="text-align:left">然后紧随一个字符串是在当前所编辑的文档中正向查找该字符串。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">输入 ?&lt;/td>
&lt;td style="text-align:left">然后紧随一个字符串则是在当前所编辑的文档中反向查找该字符串。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">n&lt;/td>
&lt;td style="text-align:left">完成一次查找之后按 n 键是重复上一次的命令，可在同一方向上&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">N&lt;/td>
&lt;td style="text-align:left">查找下一个匹配字符串所在或者按大写 N 向相反方向查找下一匹配字符串所在。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">`.&lt;/td>
&lt;td style="text-align:left">跳转到之前修改位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">``&lt;/td>
&lt;td style="text-align:left">在前一次跳转位置与当前位置间切换&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">CTRL-O或者CTRL-I&lt;/td>
&lt;td style="text-align:left">跳转回较旧的位置或跳转到较新的位置。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="3删除复制粘贴">3、删除、复制、粘贴&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">按键&lt;/th>
&lt;th style="text-align:left">操作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">x&lt;/td>
&lt;td style="text-align:left">删除光标所在位置的字符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">di{/(/[&lt;/td>
&lt;td style="text-align:left">删除匹配括号里面的内容&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">diw&lt;/td>
&lt;td style="text-align:left">删除单词，不包括两边空格&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">daw&lt;/td>
&lt;td style="text-align:left">删除单词，包括两边空格&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">dip&lt;/td>
&lt;td style="text-align:left">删除段落，从前一个空行到下一个空行间，不包括空行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">dap&lt;/td>
&lt;td style="text-align:left">删除段落，从前一个空行到下一个空行间，包括空行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">dis&lt;/td>
&lt;td style="text-align:left">删除句子&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">das&lt;/td>
&lt;td style="text-align:left">删除句子&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">y&lt;/td>
&lt;td style="text-align:left">复制文本（可视化模式下复制）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">yy&lt;/td>
&lt;td style="text-align:left">复制一行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">dw&lt;/td>
&lt;td style="text-align:left">从当前光标删除至下一个单词&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">d$&lt;/td>
&lt;td style="text-align:left">从当前光标删除至当前行末尾&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">dd&lt;/td>
&lt;td style="text-align:left">删除并复制整行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">p&lt;/td>
&lt;td style="text-align:left">粘贴先前复制的文本于光标之后&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">P&lt;/td>
&lt;td style="text-align:left">粘贴先前复制的文本于光标之前&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="4替换">4、替换&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">按键&lt;/th>
&lt;th style="text-align:left">操作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">R&lt;/td>
&lt;td style="text-align:left">进入替换模式&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">r&lt;/td>
&lt;td style="text-align:left">替换光标所在位置的字符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">ce&lt;/td>
&lt;td style="text-align:left">替换当前光标到单词的末尾的内容&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">c$&lt;/td>
&lt;td style="text-align:left">替换当前光标到行末的内容&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">:s/old/new&lt;/td>
&lt;td style="text-align:left">在一行内替换头一个字符串 old 为新的字符串 new&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">s/old/new/g&lt;/td>
&lt;td style="text-align:left">在一行内替换所有的字符串 old 为新的字符串 new&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">:#,#s/old/new/g&lt;/td>
&lt;td style="text-align:left">在两行内替换所有的字符串 old 为新的字符串 new&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">:%s/old/new/g&lt;/td>
&lt;td style="text-align:left">在文件内替换所有的字符串 old 为新的字符串 new&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">:%s/old/new/gc&lt;/td>
&lt;td style="text-align:left">进行全文替换时询问用户确认每个替换需添加 c 标志&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="5打开保存退出撤销">5、打开/保存/退出/撤销&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">按键&lt;/th>
&lt;th style="text-align:left">操作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">:e&lt;/td>
&lt;td style="text-align:left">&amp;lt;path/to/file&amp;gt; 打开一个文件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">vim 文件名&lt;/td>
&lt;td style="text-align:left">进入 Vim 编辑器(从命令行提示符)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">:q!&lt;/td>
&lt;td style="text-align:left">退出 Vim 编辑器，放弃所有改动&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">:w&lt;/td>
&lt;td style="text-align:left">保存改动&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">:saveas&lt;/td>
&lt;td style="text-align:left">&amp;lt;path/to/file&amp;gt; 另存为&amp;lt;path/to/file&amp;gt;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">:wq或者ZZ&lt;/td>
&lt;td style="text-align:left">退出 Vim 编辑器，保存改动。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">u&lt;/td>
&lt;td style="text-align:left">撤消以前的操作&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">U&lt;/td>
&lt;td style="text-align:left">撤消在一行中所做的改动&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">CTRL-R&lt;/td>
&lt;td style="text-align:left">撤消以前的撤消命令，恢复以前的操作结果&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="6重复命令">6、重复命令&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">按键&lt;/th>
&lt;th style="text-align:left">操作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">.&lt;/td>
&lt;td style="text-align:left">重复上一次命令&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">N&lt;/td>
&lt;td style="text-align:left">重复某个命令n次&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>zo - 打开折叠
zc - 关闭折叠&lt;/p>
&lt;p>C-n或者C-p 自动补全
&amp;lt;或者&amp;gt; 左右缩进
可视化选中后，=格式化代码
:split 上下分屏
:vsplit 左右分屏
C-w + 方向，分屏间移动&lt;/p>
&lt;p>C-v或者C-q 可视-块，操作后按esc使每一行生效&lt;/p>
&lt;p>operator [number] motion 在正常模式下修改命令的格式
其中：
operator - 操作符，代表要做的事情，比如 d 代表删除
[number] - 可以附加的数字，代表动作重复的次数
motion - 动作，代表在所操作的文本上的移动，例如 w 代表单词(word)，
$ 代表行末等等。&lt;/p>
&lt;p>v motion :w FILENAME 可将当前编辑文件中可视模式下选中的内容保存到文件FILENAME中
:w FILENAME 可将当前 VIM 中正在编辑的文件保存到名为 FILENAME 的文件中。
:r FILENAME 可提取磁盘文件 FILENAME 并将其插入到当前文件的光标位置后面。
:r !dir 可以读取 dir 命令的输出并将其放置到当前文件的光标位置后面。&lt;/p>
&lt;p>c [number] motion 更改类命令的格式&lt;/p>
&lt;ol>
&lt;li>CTRL-G 用于显示当前光标所在位置和文件状态信息。
先敲入一个行号然后输入大写 G 则是将光标移动至该行号代表的行。&lt;/li>
&lt;/ol>
&lt;p>:!command 用于执行一个外部命令 command。
请看一些实际例子：
(MS-DOS) (Unix)
:!dir :!ls - 用于显示当前目录的内容。
:!del FILENAME :!rm FILENAME - 用于删除名为 FILENAME 的文件。&lt;/p>
&lt;p>:set xxx 可以设置 xxx 选项。一些有用的选项如下：
‘ic’ ‘ignorecase’ 查找时忽略字母大小写
‘is’ ‘incsearch’ 查找短语时显示部分匹配
‘hls’ ‘hlsearch’ 高亮显示所有的匹配短语
选项名可以用完整版本，也可以用缩略版本。
在选项前加上 no 可以关闭选项： :set noic&lt;/p>
&lt;p>:help 或者按 键或 键可以打开帮助窗口,输入:q以关闭帮助窗口
:help cmd 可以找到关于 cmd 命令的帮助。
CTRL-W 可以使您在窗口之间跳转。&lt;/p>
&lt;ol>
&lt;li>您可以创建一个 vimrc 启动脚本文件用来保存您偏好的设置。&lt;/li>
&lt;li>当输入 : 命令时，按 CTRL-D 可以查看可能的补全结果。
按 可以使用一个补全。&lt;/li>
&lt;/ol>
&lt;p>简单计算器: 在插入模式下，输入C-r =，然后输入表达式，就能在 光标处得到计算结果。&lt;/p>
&lt;pre tabindex="0">&lt;code> ^
k 提示： h 的键位于左边，每次按下就会向左移动。
&amp;lt; h l &amp;gt; l 的键位于右边，每次按下就会向右移动。
j j 键看起来很象一支尖端方向朝下的箭头。
v
&lt;/code>&lt;/pre>&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;h3 id="vim配置">vim配置&lt;/h3>
&lt;p>1.安装中文帮助vimcdoc-1.8.0-setup.exe 地址：http://vimcdoc.sourceforge.net/&lt;/p>
&lt;p>vim
vim 文件名 进入 Vim 编辑器(从命令行提示符)
:set wm=数字 设置页面右边距，到达该位置自动插入换行符
:set number 显示行数
:set relative number 显示相对行数&lt;/p>
&lt;h3 id="编辑">编辑：&lt;/h3>
&lt;p>i 当前光标前插入
I 在行首插入
a 当前光标后插入
A 在行末插入
o 光标下方打开新的一行并进入插入模式。
O 可以在光标上方打开新的一行。
s 删除光标所在处字符，并进入插入模式
S 删除光标所在的行，并进入插入模式
ZZ 退出并保存编辑
:wq，ZZ或:x 退出 Vim 编辑器，保存改动
:q! 退出 Vim 编辑器，放弃所有改动
:e! 放弃本次会话进行的任何编辑，返回到初始文件
x 删除光标所在位置的字符
dw 从当前光标删除至下一个单词（删至下一个字的开头）
db 删除光标前面的字
d$ 从当前光标删除至当前行末尾
dG 从当前光标所在行删除至文末
dd 删除整行
p 重新置入已经删除的文本内容,将已删除的文本内容置于光标之后（将临时缓冲区中的文本放入光标后）
P 将临时缓冲区中的文本放入光标前
y 复制文本，p 粘贴先前复制的文本。
yy 复制当前行
nyy 复制n行
“(a-z)nyy 复制 n 行放入名字为圆括号内的可命名缓冲区，省略 n 表示当前行
“(a-z)ndd 删除 n 行放入名字为圆括号内的可命名缓冲区，省略 n 表示当前行
“(a-z)p 将名字为圆括号的可命名缓冲区的内容放入当前行后
“(a-z)P 将名字为圆括号的可命名缓冲区的内容放入当前行前
J 将下一行连接到当前行的末尾
nJ 连接后面 n 行
R 进入替换模式
r 替换光标所在位置的字符
ce 替换当前光标到单词的末尾的内容
c$ 替换当前光标到行末的内容 同C
c0 替换当前光标到行首的内容
cc 替换当前整行&lt;/p>
&lt;p>数字+命令 重复动作&lt;/p>
&lt;h3 id="移动">移动&lt;/h3>
&lt;p>b 移到上一个字的开头
W 移到上一个字的开头，忽略标点符号
w 移到下一个字的开头
W 移到下一个字的开头，忽略标点符号
e 移到下一个字的结尾
E 移到下一个字的结尾，忽略标点符号
( 移到句子的开头
) 移到句子的结尾
{ 移到段落的开头
} 移到下一个段落的开头
[[ 回到段落的开头处
]] 向前移到下一个段落的开头处
L 移到屏幕的最后一行
M 移到屏幕的中间一行
H 移到屏幕的第一行
0或| 移动光标到行首
^ 移到当前行的第一个非空字符
$ 移动光标到行末
+或Enter 移到下一行的第一个字符&lt;/p>
&lt;ul>
&lt;li>移到前一行的第一个非空字符
G 用于将光标跳转至文件最后一行。
gg 用于将光标跳转至文件第一行。&lt;/li>
&lt;/ul>
&lt;p>如果光标当前位置是括号(、)、[、]、{、}，按 % 会将光标移动到配对的括号上。&lt;/p>
&lt;h3 id="撤销">撤销：&lt;/h3>
&lt;p>u 撤消以前的操作
U 撤消在一行中所做的改动
CTRL-R 撤消以前的撤消命令，恢复以前的操作结果
. 重复最后一次修改
, 以相反的方向重复前面的 f、F、t 或 T 查找命令
; 重复前面的 f、F、t 或 T 查找命令
“np 取回最后第 n 次的删除(缓冲区中存有一定次数的删除内容，一般为 9)
n 重复前面的 / 或 ? 查找命令
N 以相反方向重复前面的 / 或 ? 命令&lt;/p>
&lt;h3 id="查找">查找：&lt;/h3>
&lt;p>f 在当前行向前查找 text
F 在当前行向后查找 text
t 在当前行向前查找 text，并将光标定位在 text 的第一个字符
T 在当前行向后查找 text，并将光标定位在 text 的第一个字符
对当前单词进行查找：# 和 *（记住要推出visual模式），完全匹配
输入 /字符串 正向查找该字符串。
输入 ?字符串 反向查找该字符串。
完成一次查找之后按 n 键是重复上一次的命令，N 向相反方向查找。
CTRL-O 带您跳转回较旧的位置，CTRL-I 则带您到较新的位置。&lt;/p>
&lt;h3 id="替换">替换：&lt;/h3>
&lt;p>在一行内替换头一个字符串 old 为新的字符串 new，请输入 :s/old/new
在一行内替换所有的字符串 old 为新的字符串 new，请输入 :s/old/new/g
在两行内替换所有的字符串 old 为新的字符串 new，请输入 :#,#s/old/new/g
在文件内替换所有的字符串 old 为新的字符串 new，请输入 :%s/old/new/g
进行全文替换时询问用户确认每个替换需添加 c 标志 :%s/old/new/gc&lt;/p>
&lt;p>:set all 打印所有选项
:set nooption 关闭 option 选项
:set nu 每行前打印行号
:set showmode 显示是输入模式还是替换模式
:set autoindent 继承前一行的缩进方式，特别适用于多行注释
:set smartindent 为C程序提供自动缩进
:set list 显示制表符(^I)和行尾符号
:set ts=8 为文本输入设置 tab stops
:set window=n 设置文本窗口显示 n 行
:set number 显示行数
:set nonumber 取消显示行数&lt;/p>
&lt;p>:= 打印文件中的行数
ctrl+g 显示文件名、当前的行号、文件的总行数和文件位置的百分比
:l 使用字母 “l” 来显示许多的特殊字符，如制表符和换行符&lt;/p>
&lt;p>:r FILENAME 可提取磁盘文件 FILENAME 并将其插入到当前文件的光标位置后面。
:r !dir 可以读取 dir 命令的输出并将其放置到当前文件的光标位置后面。&lt;/p>
&lt;p>:!command 用于执行一个外部命令 command。
请看一些实际例子：
(MS-DOS) (Unix)
:!dir :!ls - 用于显示当前目录的内容。
:!del FILENAME :!rm FILENAME - 用于删除名为 FILENAME 的文件。&lt;/p>
&lt;p>当输入 : 命令时，按 CTRL-D 可以查看可能的补全结果。
按 可以使用一个补全。&lt;/p>
&lt;p>ggVG：全选
ggvGJ：合并为一行&lt;/p></description></item></channel></rss>