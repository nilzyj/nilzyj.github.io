<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>架构 on My New Hugo Site</title>
    <link>https://nilzyj.github.io/categories/%E6%9E%B6%E6%9E%84/</link>
    <description>Recent content in 架构 on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Jun 2021 17:29:10 +0000</lastBuildDate><atom:link href="https://nilzyj.github.io/categories/%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>微服务架构</title>
      <link>https://nilzyj.github.io/framework/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Mon, 21 Jun 2021 17:29:10 +0000</pubDate>
      
      <guid>https://nilzyj.github.io/framework/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</guid>
      <description>支撑服务：负载均衡、网关、服务发现、集中配置、容错限流、认证授权、日志聚合、监控告警、灰度发布
平台服务PaaS：发布系统、集群资源调度、镜像治理、资源治理
基础设施LaaS：计算、网格、存储、NOC监控、安全
微服务可分为五个监控点：日志监控、Metrics 监控、健康检查、调用链检查、告警系统
调用链监控：Zipkin（Twitter团队）、Pinpoint（韩国）、SkyWalking（国内）、CAT（大众点评）、
   配置中心 百度配置中心Disconf spring cloud config Apollo Nacos        apollo的配置中心规模比较大，本地应用会有响应的配置中心客户端，可以定时同步配置中心里的配置。如果配置中心怠机，会使用缓存来进行配置。                             通讯方式 RPC REST     耦合性 强耦合 松散耦合   消息协议 TCP HTTP   通讯协议 二进制 文本XML，json   性能 高 低于RPC   接口契约IDL thrift, protobuf, IdL Swagger   客户端 强类型客户端，一般自动生成 一般HTTP可访问，生成强类型客户端，多语言支持好   案例 Dubbo, Dubbox, motan, tars, grpc, thrift spring boot, tax-rs, dropwizard   开发者友好 客户端比较全面，二进制消息不能读 可读消息   对外开放 一般需要转成REST/文本协议 可直接对外开放       监控预警 监控内容     端用户体验监控 性能、返回码、城市、地区、运营商、版本、系统等   业务监控 核心指标监控、登录注册、下单、支付等   应用层监控 url、service、sql、cache可用率、响应时间、qps等   系统层监控（物理机、虚拟机、OS） cpu、内存、网络、硬盘等   基础设施监控（网络、交换机） 网络流量、丢包、错包、连接数等    监控架构</description>
    </item>
    
    <item>
      <title>软件部署</title>
      <link>https://nilzyj.github.io/framework/%E8%BD%AF%E4%BB%B6%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Mon, 21 Jun 2021 17:29:10 +0800</pubDate>
      
      <guid>https://nilzyj.github.io/framework/%E8%BD%AF%E4%BB%B6%E9%83%A8%E7%BD%B2/</guid>
      <description>一、Docker安装 Docker安装系统要求：
CentOS 7，要求系统为64位、系统内核版本为 3.10 以上。 CentOS-6.5 或更高的版本的 CentOS 上，要求系统为64位、系统内核版本为 2.6.32-431 或者更高版本。
（1）查看当前的内核版本 uname -r （2）安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的 yum install -y yum-utils device-mapper-persistent-data lvm2 （3）设置yum源 yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo （4）查看所有仓库中所有docker版本，并选择特定版本安装 yum list docker-ce --showduplicates | sort -r （5）安装docker yum install docker-ce # 由于repo中默认只开启stable仓库，故这里安装的是最新稳定版 或者安装特定版本，例如
yum install docker-ce-17.12.0.ce （6）添加阿里云镜像加速 mkdir -p /etc/docker tee /etc/docker/daemon.json &amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39; { &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://phuumrx6.mirror.aliyuncs.com&amp;#34;] } EOF （7）启动并加入开机启动 systemctl start docker # 启动docker systemctl enable docker # 将docker加入开机启动 （8）验证安装是否成功 docker version # 有client和service两部分表示docker安装启动都成功了 （9）相关命令 systemctl daemon-reload # 重载所有修改过的配置文件 systemctl restart docker # 重启docker 二、docker安装mysql（主从） （1）拉取mysql镜像 docker pull mysql:5.</description>
    </item>
    
  </channel>
</rss>
